shader_type canvas_item;

//https://godotshaders.com/snippet/voronoi/
vec2 random(vec2 uv) {
	return vec2(fract(sin(dot(uv.xy,
		vec2(12.9898,78.233))) * 43758.5453123));
}

float worley(vec2 uv, float columns, float rows) {
	
	vec2 index_uv = floor(vec2(uv.x * columns, uv.y * rows));
	vec2 fract_uv = fract(vec2(uv.x * columns, uv.y * rows));
	
	float minimum_dist = 1.0;  
	
	for (int y= -1; y <= 1; y++) {
		for (int x= -1; x <= 1; x++) {
			vec2 neighbor = vec2(float(x),float(y));
			vec2 point = random(index_uv + neighbor);
			point += sin(TIME + point * 6.2831) * 0.2; // wiggle movement
			
			vec2 diff = neighbor + point - fract_uv;
			float dist = length(diff);
			minimum_dist = min(minimum_dist, dist);
		}
	}
	
	return minimum_dist;
}

void fragment() {
	vec4 tex = texture(TEXTURE, UV);
	float worley = worley(UV, 3.0, 5.0);
	worley = 1.0 - worley;
	COLOR = vec4(worley * tex.x, worley * tex.y, worley * tex.z, tex.a);
}
